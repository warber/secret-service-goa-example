// Code generated by goa v3.7.12, DO NOT EDIT.
//
// secret HTTP client CLI support package
//
// Command:
// $ goa gen secretsvc/design

package client

import (
	"encoding/json"
	"fmt"
	secret "secretsvc/gen/secret"
)

// BuildCreateSecretPayload builds the payload for the secret createSecret
// endpoint from CLI flags.
func BuildCreateSecretPayload(secretCreateSecretBody string) (*secret.CreateSecretRequestBody, error) {
	var err error
	var body CreateSecretRequestBody
	{
		err = json.Unmarshal([]byte(secretCreateSecretBody), &body)
		if err != nil {
			return nil, fmt.Errorf("invalid JSON for body, \nerror: %s, \nexample of valid JSON:\n%s", err, "'{\n      \"data\": {\n         \"Blanditiis eos neque quod maiores enim vel.\": \"Quam ullam magni quis.\",\n         \"Velit neque blanditiis repudiandae.\": \"Qui rerum omnis.\"\n      },\n      \"name\": \"Dolorem necessitatibus.\",\n      \"scope\": \"Maiores labore nulla molestiae harum at voluptatem.\"\n   }'")
		}
	}
	v := &secret.CreateSecretRequestBody{
		Name:  body.Name,
		Scope: body.Scope,
	}
	if body.Data != nil {
		v.Data = make(map[string]string, len(body.Data))
		for key, val := range body.Data {
			tk := key
			tv := val
			v.Data[tk] = tv
		}
	}

	return v, nil
}
