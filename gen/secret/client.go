// Code generated by goa v3.7.12, DO NOT EDIT.
//
// secret client
//
// Command:
// $ goa gen secretsvc/design

package secret

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// Client is the "secret" service client.
type Client struct {
	GetSecretEndpoint    goa.Endpoint
	CreateSecretEndpoint goa.Endpoint
}

// NewClient initializes a "secret" service client given the endpoints.
func NewClient(getSecret, createSecret goa.Endpoint) *Client {
	return &Client{
		GetSecretEndpoint:    getSecret,
		CreateSecretEndpoint: createSecret,
	}
}

// GetSecret calls the "getSecret" endpoint of the "secret" service.
func (c *Client) GetSecret(ctx context.Context) (res *GetSecretsResponseBody, err error) {
	var ires interface{}
	ires, err = c.GetSecretEndpoint(ctx, nil)
	if err != nil {
		return
	}
	return ires.(*GetSecretsResponseBody), nil
}

// CreateSecret calls the "createSecret" endpoint of the "secret" service.
// CreateSecret may return the following errors:
//	- "secret_already_exists" (type *goa.ServiceError)
//	- error: internal error
func (c *Client) CreateSecret(ctx context.Context, p *CreateSecretRequestBody) (res *CreateSecretResponseBody, err error) {
	var ires interface{}
	ires, err = c.CreateSecretEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*CreateSecretResponseBody), nil
}
