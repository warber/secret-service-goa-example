// Code generated by goa v3.7.12, DO NOT EDIT.
//
// secret service
//
// Command:
// $ goa gen secretsvc/design

package secret

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// The secret service can create delete or update Keptn secrets
type Service interface {
	// GetSecret implements getSecret.
	GetSecret(context.Context) (res *GetSecretsResponseBody, err error)
	// CreateSecret implements createSecret.
	CreateSecret(context.Context, *CreateSecretRequestBody) (res *CreateSecretResponseBody, err error)
}

// ServiceName is the name of the service as defined in the design. This is the
// same value that is set in the endpoint request contexts under the ServiceKey
// key.
const ServiceName = "secret"

// MethodNames lists the service method names as defined in the design. These
// are the same values that are set in the endpoint request contexts under the
// MethodKey key.
var MethodNames = [2]string{"getSecret", "createSecret"}

// CreateSecretRequestBody is the payload type of the secret service
// createSecret method.
type CreateSecretRequestBody struct {
	Data  map[string]string
	Name  *string
	Scope *string
}

// CreateSecretResponseBody is the result type of the secret service
// createSecret method.
type CreateSecretResponseBody struct {
	Data  map[string]string
	Name  *string
	Scope *string
}

// Secret result
type GetSecretResponseBody struct {
	Keys  []string
	Name  *string
	Scope *string
}

// GetSecretsResponseBody is the result type of the secret service getSecret
// method.
type GetSecretsResponseBody struct {
	Secrets []*GetSecretResponseBody
}

// MakeSecretAlreadyExists builds a goa.ServiceError from an error.
func MakeSecretAlreadyExists(err error) *goa.ServiceError {
	return goa.NewServiceError(err, "secret_already_exists", false, false, false)
}
